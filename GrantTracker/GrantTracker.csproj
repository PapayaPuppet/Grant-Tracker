<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
		<IsTransformWebConfigDisabled>true</IsTransformWebConfigDisabled>
    <TargetFramework>net6.0</TargetFramework>
	  <TargetLatestRuntimePatch>true</TargetLatestRuntimePatch>
	  <LangVersion>preview</LangVersion>
    <Nullable>disable</Nullable>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <SpaProxyServerUrl>http://localhost:44395</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <ImplicitUsings>enable</ImplicitUsings>
    <Configurations>Debug;Release;</Configurations>
  </PropertyGroup>  
    
  <PropertyGroup>
	<RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>  
    
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <Optimize>False</Optimize>
  </PropertyGroup>

  <ItemGroup>
	<InternalsVisibleTo Include="EntityTesting" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="ClosedXML" Version="0.102.3" />
    <PackageReference Include="ClosedXML.Extensions.WebApi" Version="0.3.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Certificate" Version="6.0.6" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Negotiate" Version="6.0.6" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="6.0.31" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.6" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="7.0.11" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="7.0.11">
        <PrivateAssets>all</PrivateAssets>
        <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Proxies" Version="6.0.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="7.0.11" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="7.0.11" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.7.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="NSwag.AspNetCore" Version="14.0.3" />
    <PackageReference Include="NSwag.CodeGeneration.CSharp" Version="14.0.3" />
    <PackageReference Include="NSwag.Core" Version="14.0.3" />
    <PackageReference Include="NSwag.MSBuild" Version="14.0.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="PDFsharp" Version="6.1.1" />
    <PackageReference Include="Serilog" Version="3.0.1" />
    <PackageReference Include="Serilog.AspNetCore" Version="7.0.0" />
    <PackageReference Include="Serilog.Formatting.Compact" Version="1.1.0" />
    <PackageReference Include="Serilog.Sinks.Console" Version="4.1.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
    <PackageReference Include="System.DirectoryServices.AccountManagement" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\.vscode\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\.vscode\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="ClientApp\.vscode\**" />
    <EmbeddedResource Remove="ClientApp\.vscode\**" />
    <TypeScriptCompile Remove="ClientApp\.vscode\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\.vscode\settings.json" />
    <None Remove="ClientApp\src\components\SessionDetails\index.tsx" />
    <None Remove="ClientApp\src\components\Tabset\styles.ts" />
    <None Remove="ClientApp\src\components\TimeRangeSelector\index.tsx" />
    <None Remove="ClientApp\src\components\TimeRangeSelector\Input\helpers.ts" />
    <None Remove="ClientApp\src\components\TimeRangeSelector\Input\Hour.tsx" />
    <None Remove="ClientApp\src\components\TimeRangeSelector\Input\Minute.tsx" />
    <None Remove="ClientApp\src\components\TimeRangeSelector\Input\Period.tsx" />
    <None Remove="ClientApp\src\components\TimeRangeSelector\styles.tsx" />
    <None Remove="ClientApp\src\components\TimeRangeSelector\types.ts" />
    <None Remove="ClientApp\src\pages\SiteSessions\styles.ts" />
    <None Remove="ClientApp\src\utils\Array.ts" />
    <None Remove="ClientApp\src\utils\Math.ts" />
    <None Remove="ClientApp\src\utils\React.ts" />
    <None Remove="ClientApp\tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Remove="ClientApp\src\pages\Editor\Session\api.ts" />
    <TypeScriptCompile Remove="ClientApp\src\utils\api\index.ts" />
  </ItemGroup>

  <ItemGroup>
    <None Include="ClientApp\package.json" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\components\Tabset\index.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\Tabset\styles.ts" />
    <TypeScriptCompile Include="ClientApp\src\components\TimeRangeSelector\classes\Hour.ts" />
    <TypeScriptCompile Include="ClientApp\src\components\TimeRangeSelector\index.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\TimeRangeSelector\Input\helpers.ts" />
    <TypeScriptCompile Include="ClientApp\src\components\TimeRangeSelector\Input\Hour.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\TimeRangeSelector\classes\Minute.ts" />
    <TypeScriptCompile Include="ClientApp\src\components\TimeRangeSelector\Input\Minute.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\TimeRangeSelector\Input\Period.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\TimeRangeSelector\styles.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\TimeRangeSelector\types.ts" />
    <TypeScriptCompile Include="ClientApp\src\pages\SiteSessions\styles.ts" />
    <TypeScriptCompile Include="ClientApp\src\utils\Array.ts" />
    <TypeScriptCompile Include="ClientApp\src\utils\Math.ts" />
    <TypeScriptCompile Include="ClientApp\src\utils\React.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\dist\" />
    <Folder Include="Migrations\" />
    <Folder Include="Tests\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
