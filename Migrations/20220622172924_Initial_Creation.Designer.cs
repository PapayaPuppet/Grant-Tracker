// <auto-generated />
using System;
using GrantTracker.Dal.Schema;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrantTracker.Migrations
{
    [DbContext(typeof(GrantTrackerContext))]
    [Migration("20220622172924_Initial_Creation")]
    partial class Initial_Creation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("GTkr")
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GrantTracker.Dal.Schema.Activity", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ActivityGuid")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("Abbreviation of the label for use in frontend dropdowns.");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasComment("Extended description of the activity for future use and ensuring the activity is well explained in the event it's label is unhelpful.");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasComment("Short textual description of the activity type for use in frontend dropdowns.");

                    b.HasKey("Guid");

                    b.HasIndex("Abbreviation")
                        .IsUnique()
                        .HasFilter("[Abbreviation] IS NOT NULL");

                    b.HasIndex("Label")
                        .IsUnique();

                    b.ToTable("Activity", "GTkr");

                    b.HasComment("Lookup table for session activity types.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.AuditLog", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Action")
                        .HasColumnType("tinyint")
                        .HasComment("");

                    b.Property<DateTime>("ChangeDateTime")
                        .HasColumnType("datetime")
                        .HasComment("");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("");

                    b.HasKey("Guid");

                    b.ToTable("AuditLog", "GTkr");

                    b.HasComment("Change log for the database.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.ExceptionLog", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("InnerMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstructorSchoolYearGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Guid");

                    b.HasIndex("InstructorSchoolYearGuid");

                    b.ToTable("ExceptionLog", "GTkr");

                    b.HasComment("Log to view exceptions in production. The next programmer may have access to the production site and database, but I do not.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.FamilyAttendance", b =>
                {
                    b.Property<Guid>("AttendanceGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FamilyMemberGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InstanceDate")
                        .HasColumnType("date")
                        .HasComment("Specific date that the session took place on.");

                    b.Property<short>("MinutesAttended")
                        .HasColumnType("smallint")
                        .HasComment("Total number of minutes attended by a family member for the instance of a session.");

                    b.Property<Guid>("SessionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AttendanceGuid");

                    b.HasIndex("SessionGuid");

                    b.HasIndex("FamilyMemberGuid", "SessionGuid", "InstanceDate")
                        .IsUnique();

                    b.ToTable("FamilyAttendance", "GTkr");

                    b.HasComment("Audit log for family attendance, contains any change that updates family hours.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.FundingSource", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FundingGuid")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("Abbreviation of the label for use in frontend dropdowns.");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasComment("Extended description of the source for future use and ensuring the source is well explained in the event it's label is unhelpful.");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Short textual description of the funding source for use in frontend dropdowns.");

                    b.HasKey("Guid");

                    b.HasIndex("Abbreviation")
                        .IsUnique()
                        .HasFilter("[Abbreviation] IS NOT NULL");

                    b.HasIndex("Label")
                        .IsUnique();

                    b.ToTable("FundingSource", "GTkr");

                    b.HasComment("Lookup table for session funding sources.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Identity", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Claim")
                        .HasColumnType("tinyint");

                    b.HasKey("Guid");

                    b.ToTable("Identity", "GTkr");

                    b.HasComment("User authentication for assignment of authorization claims. Only display this information to top-level users. Never send it to the front-end otherwise.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.InstructorAttendance", b =>
                {
                    b.Property<Guid>("InstructorAttendanceGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InstanceDate")
                        .HasColumnType("date")
                        .HasComment("Specific date that the session took place on.");

                    b.Property<Guid>("InstructorSchoolYearGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("MinutesAttended")
                        .HasColumnType("smallint")
                        .HasComment("Total number of minutes attended by an instructor for the instance of a session.");

                    b.Property<Guid>("SessionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InstructorAttendanceGuid");

                    b.HasIndex("SessionGuid");

                    b.HasIndex("InstructorSchoolYearGuid", "SessionGuid", "InstanceDate")
                        .IsUnique();

                    b.ToTable("InstructorAttendance", "GTkr");

                    b.HasComment("Audit log for instructor attendance, contains any change that updates instructor hours.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.InstructorRegistration", b =>
                {
                    b.Property<Guid>("SessionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstructorSchoolYearGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SessionGuid", "InstructorSchoolYearGuid");

                    b.HasIndex("InstructorSchoolYearGuid");

                    b.ToTable("InstructorRegistration", "GTkr");

                    b.HasComment("");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.InstructorSchoolYear", b =>
                {
                    b.Property<Guid>("InstructorSchoolYearGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstructorGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationYearGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InstructorSchoolYearGuid");

                    b.HasIndex("OrganizationYearGuid");

                    b.HasIndex("StatusGuid");

                    b.HasIndex("InstructorGuid", "OrganizationYearGuid")
                        .IsUnique();

                    b.ToTable("InstructorSchoolYear", "GTkr");

                    b.HasComment("An instructor at a school during a given school year.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.InstructorStatus", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StatusGuid")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("Abbreviation of the label for use in frontend dropdowns.");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasComment("Extended description of the objective for future use and ensuring the objective is well explained in the event it's label is unhelpful.");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Short textual description of the objective for use in frontend dropdowns.");

                    b.HasKey("Guid");

                    b.HasIndex("Abbreviation")
                        .IsUnique()
                        .HasFilter("[Abbreviation] IS NOT NULL");

                    b.HasIndex("Label")
                        .IsUnique();

                    b.ToTable("InstructorStatus", "GTkr");

                    b.HasComment("");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.LookupDefinition", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasComment("Useful description of what is being defined.");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasComment("Name of the definition.");

                    b.HasKey("Guid");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("LookupDefinition", "GTkr");

                    b.HasComment("Lookup table for persistent attributes.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.LookupValue", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("DefinitionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasComment("Useful description of the value.");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasComment("Name of the value.");

                    b.HasKey("Guid");

                    b.HasIndex("DefinitionGuid");

                    b.ToTable("LookupValue", "GTkr");

                    b.HasComment("Lookup table for persistent attributes' values and their meaning.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Objective", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectiveGuid")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("Abbreviation of the label for use in frontend dropdowns.");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasComment("Extended description of the objective for future use and ensuring the objective is well explained in the event it's label is unhelpful.");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasComment("Short textual description of the objective for use in frontend dropdowns.");

                    b.HasKey("Guid");

                    b.HasIndex("Abbreviation")
                        .IsUnique()
                        .HasFilter("[Abbreviation] IS NOT NULL");

                    b.HasIndex("Label")
                        .IsUnique();

                    b.ToTable("Objective", "GTkr");

                    b.HasComment("Lookup table for session objectives.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Organization", b =>
                {
                    b.Property<Guid>("OrganizationGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OrganizationGuid");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Organization", "GTkr");

                    b.HasComment("Organizations such as sites, a group of administrators, etc.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.OrganizationType", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrganizationGuid")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("Abbreviation of the label for use in frontend dropdowns.");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasComment("Extended description of the type for future use and ensuring the type is well explained in the event it's label is unhelpful.");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Short textual description of the funding source for use in frontend dropdowns.");

                    b.HasKey("Guid");

                    b.HasIndex("Abbreviation")
                        .IsUnique()
                        .HasFilter("[Abbreviation] IS NOT NULL");

                    b.HasIndex("Label")
                        .IsUnique();

                    b.ToTable("OrganizationType", "GTkr");

                    b.HasComment("Lookup table for session organization types.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.OrganizationYear", b =>
                {
                    b.Property<Guid>("OrganizationYearGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("YearGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrganizationYearGuid");

                    b.HasIndex("YearGuid");

                    b.HasIndex("OrganizationGuid", "YearGuid")
                        .IsUnique();

                    b.ToTable("OrganizationYear", "GTkr");

                    b.HasComment("An organization during a given school year.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.PartnershipType", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PartnershipGuid")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("Abbreviation of the label for use in frontend dropdowns.");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasComment("Extended description of the partnership for future use and ensuring the partnership is well explained in the event it's label is unhelpful.");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Short textual description of the partnership type for use in frontend dropdowns.");

                    b.HasKey("Guid");

                    b.HasIndex("Abbreviation")
                        .IsUnique()
                        .HasFilter("[Abbreviation] IS NOT NULL");

                    b.HasIndex("Label")
                        .IsUnique();

                    b.ToTable("Partnership", "GTkr");

                    b.HasComment("Lookup table for session partnership types.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Person", b =>
                {
                    b.Property<Guid>("PersonGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("The given, legal first name for a person.");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The given, legal last name(s) for a person.");

                    b.Property<string>("PersonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonGuid");

                    b.ToTable("Person", "GTkr");

                    b.HasDiscriminator<string>("PersonType").HasValue("Person");

                    b.HasComment("Basic information that is ubiquitous to all people stored for use in the Grant Tracker.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Relationship", b =>
                {
                    b.Property<Guid>("StudentGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FamilyMemberGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Relation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("A short textual descriptor of how a student and family member are related. Father, Mother, brother, cousin, etc.");

                    b.HasKey("StudentGuid", "FamilyMemberGuid");

                    b.HasIndex("FamilyMemberGuid");

                    b.ToTable("StudentFamily", "GTkr");

                    b.HasComment("A many to many table that relates students and family members.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Session", b =>
                {
                    b.Property<Guid>("SessionGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FirstSession")
                        .HasColumnType("date")
                        .HasComment("Date of the first session.");

                    b.Property<Guid>("FundingSourceGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastSession")
                        .HasColumnType("date")
                        .HasComment("Date of the first session.");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("Name of the session, set by a responsible party.");

                    b.Property<Guid>("ObjectiveGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationTypeGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationYearGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("");

                    b.Property<Guid>("PartnershipTypeGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Recurring")
                        .HasColumnType("bit")
                        .HasComment("");

                    b.Property<Guid>("SessionTypeGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SessionGuid");

                    b.HasIndex("ActivityGuid");

                    b.HasIndex("FundingSourceGuid");

                    b.HasIndex("ObjectiveGuid");

                    b.HasIndex("OrganizationTypeGuid");

                    b.HasIndex("OrganizationYearGuid");

                    b.HasIndex("PartnershipTypeGuid");

                    b.HasIndex("SessionTypeGuid");

                    b.ToTable("Session", "GTkr");

                    b.HasComment("Base table for sessions in the database. Contains the universal attributes any session contains.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.SessionDaySchedule", b =>
                {
                    b.Property<Guid>("SessionDayGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<byte>("DayOfWeek")
                        .HasColumnType("tinyint")
                        .HasComment("Enumerated representation for day of the week, Sunday = 1, Monday = 2, ..., Saturday = 7. Handled by EfCore ValueConverters automatically.");

                    b.Property<Guid>("SessionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SessionDayGuid");

                    b.HasIndex("SessionGuid");

                    b.ToTable("SessionDaySchedule", "GTkr");

                    b.HasComment("");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.SessionGrade", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("GradeGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SessionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.HasIndex("GradeGuid");

                    b.HasIndex("SessionGuid", "GradeGuid")
                        .IsUnique();

                    b.ToTable("SessionGrade", "GTkr");

                    b.HasComment("Each row designates one of the allowable grade levels for a session.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.SessionTimeSchedule", b =>
                {
                    b.Property<Guid>("SessionTimeGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time")
                        .HasComment("Time of day the session ends, Arizona time.");

                    b.Property<Guid>("SessionDayGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time")
                        .HasComment("Time of day the session starts, Arizona time.");

                    b.HasKey("SessionTimeGuid");

                    b.HasIndex("SessionDayGuid");

                    b.ToTable("SessionTimeSchedule", "GTkr");

                    b.HasComment("");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.SessionType", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SessionTypeGuid")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("Abbreviation of the label for use in frontend dropdowns.");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasComment("Extended description of the type for future use and ensuring the type is well explained in the event it's label is unhelpful.");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Short textual description of the type for use in frontend dropdowns.");

                    b.HasKey("Guid");

                    b.HasIndex("Abbreviation")
                        .IsUnique()
                        .HasFilter("[Abbreviation] IS NOT NULL");

                    b.HasIndex("Label")
                        .IsUnique();

                    b.ToTable("SessionType", "GTkr");

                    b.HasComment("Lookup table for session types.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.StudentAttendance", b =>
                {
                    b.Property<Guid>("StudentAttendanceGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InstanceDate")
                        .HasColumnType("date")
                        .HasComment("Specific date that the session took place on.");

                    b.Property<short>("MinutesAttended")
                        .HasColumnType("smallint")
                        .HasComment("Total number of minutes attended by a student for the instance of a session.");

                    b.Property<Guid>("SessionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentSchoolYearGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentAttendanceGuid");

                    b.HasIndex("SessionGuid");

                    b.HasIndex("StudentSchoolYearGuid", "SessionGuid", "InstanceDate")
                        .IsUnique();

                    b.ToTable("StudentAttendance", "GTkr");

                    b.HasComment("Audit log for student attendance, contains any change that updates student hours.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.StudentRegistration", b =>
                {
                    b.Property<Guid>("StudentSchoolYearGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DayScheduleGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentSchoolYearGuid", "DayScheduleGuid");

                    b.HasIndex("DayScheduleGuid");

                    b.ToTable("StudentRegistration", "GTkr");

                    b.HasComment("Contains student registrees for a session, so that students can be added and expected for filling out their attendance record.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.StudentSchoolYear", b =>
                {
                    b.Property<Guid>("StudentSchoolYearGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<Guid>("OrganizationYearGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentSchoolYearGuid");

                    b.HasIndex("OrganizationYearGuid");

                    b.HasIndex("StudentGuid");

                    b.ToTable("StudentSchoolYear", "GTkr");

                    b.HasComment("A student at a school during a given school year.");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Year", b =>
                {
                    b.Property<Guid>("YearGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsCurrentSchoolYear")
                        .HasColumnType("bit");

                    b.Property<int>("Quarter")
                        .HasColumnType("int");

                    b.Property<short>("SchoolYear")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("YearGuid");

                    b.HasIndex("SchoolYear", "Quarter")
                        .IsUnique();

                    b.HasIndex("YearGuid", "IsCurrentSchoolYear")
                        .IsUnique()
                        .HasFilter("[IsCurrentSchoolYear] = 1");

                    b.ToTable("Year", "GTkr");

                    b.HasComment("A school year split into quarters.");

                    b.HasCheckConstraint("CK_StartDate_Before_EndDate", "[StartDate] < [EndDate]");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.FamilyMember", b =>
                {
                    b.HasBaseType("GrantTracker.Dal.Schema.Person");

                    b.HasDiscriminator().HasValue("Family");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Instructor", b =>
                {
                    b.HasBaseType("GrantTracker.Dal.Schema.Person");

                    b.Property<string>("BadgeNumber")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasComment("Some rare exceptions may not have a badge number, as free input must be allowed. Not required, but supply a badge number when possible.");

                    b.HasDiscriminator().HasValue("Instructor");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Student", b =>
                {
                    b.HasBaseType("GrantTracker.Dal.Schema.Person");

                    b.Property<string>("MatricNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.ExceptionLog", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.InstructorSchoolYear", "InstructorSchoolYear")
                        .WithMany("ExceptionLogs")
                        .HasForeignKey("InstructorSchoolYearGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstructorSchoolYear");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.FamilyAttendance", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.FamilyMember", "FamilyMember")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("FamilyMemberGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.Session", "Session")
                        .WithMany("FamilyAttendance")
                        .HasForeignKey("SessionGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FamilyMember");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Identity", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.InstructorSchoolYear", "SchoolYear")
                        .WithOne("Identity")
                        .HasForeignKey("GrantTracker.Dal.Schema.Identity", "Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolYear");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.InstructorAttendance", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.InstructorSchoolYear", "InstructorSchoolYear")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("InstructorSchoolYearGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.Session", "Session")
                        .WithMany("InstructorAttendance")
                        .HasForeignKey("SessionGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InstructorSchoolYear");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.InstructorRegistration", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.InstructorSchoolYear", "InstructorSchoolYear")
                        .WithMany("SessionRegistrations")
                        .HasForeignKey("InstructorSchoolYearGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.Session", "Session")
                        .WithMany("InstructorRegistrations")
                        .HasForeignKey("SessionGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InstructorSchoolYear");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.InstructorSchoolYear", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.Instructor", "Instructor")
                        .WithMany("InstructorSchoolYears")
                        .HasForeignKey("InstructorGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.OrganizationYear", "OrganizationYear")
                        .WithMany("InstructorSchoolYears")
                        .HasForeignKey("OrganizationYearGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.InstructorStatus", "Status")
                        .WithMany("InstructorYears")
                        .HasForeignKey("StatusGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("OrganizationYear");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.LookupValue", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.LookupDefinition", "Definition")
                        .WithMany("Values")
                        .HasForeignKey("DefinitionGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Definition");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.OrganizationYear", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.Organization", "Organization")
                        .WithMany("Years")
                        .HasForeignKey("OrganizationGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.Year", "Year")
                        .WithMany("Organizations")
                        .HasForeignKey("YearGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Relationship", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.FamilyMember", "FamilyMember")
                        .WithMany("Relationships")
                        .HasForeignKey("FamilyMemberGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.Student", "Student")
                        .WithMany("Relationships")
                        .HasForeignKey("StudentGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FamilyMember");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Session", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.Activity", "Activity")
                        .WithMany("Sessions")
                        .HasForeignKey("ActivityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.FundingSource", "FundingSource")
                        .WithMany("Sessions")
                        .HasForeignKey("FundingSourceGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.Objective", "Objective")
                        .WithMany("Sessions")
                        .HasForeignKey("ObjectiveGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.OrganizationType", "OrganizationType")
                        .WithMany("Sessions")
                        .HasForeignKey("OrganizationTypeGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.OrganizationYear", "OrganizationYear")
                        .WithMany("Sessions")
                        .HasForeignKey("OrganizationYearGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.PartnershipType", "PartnershipType")
                        .WithMany("Sessions")
                        .HasForeignKey("PartnershipTypeGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.SessionType", "SessionType")
                        .WithMany("Sessions")
                        .HasForeignKey("SessionTypeGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("FundingSource");

                    b.Navigation("Objective");

                    b.Navigation("OrganizationType");

                    b.Navigation("OrganizationYear");

                    b.Navigation("PartnershipType");

                    b.Navigation("SessionType");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.SessionDaySchedule", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.Session", "Session")
                        .WithMany("DaySchedules")
                        .HasForeignKey("SessionGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.SessionGrade", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.LookupValue", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.Session", "Session")
                        .WithMany("SessionGrades")
                        .HasForeignKey("SessionGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.SessionTimeSchedule", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.SessionDaySchedule", "DaySchedule")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("SessionDayGuid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("DaySchedule");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.StudentAttendance", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.Session", "Session")
                        .WithMany("StudentAttendance")
                        .HasForeignKey("SessionGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.StudentSchoolYear", "StudentSchoolYear")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("StudentSchoolYearGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("StudentSchoolYear");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.StudentRegistration", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.SessionDaySchedule", "DaySchedule")
                        .WithMany("StudentRegistrations")
                        .HasForeignKey("DayScheduleGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.StudentSchoolYear", "StudentSchoolYear")
                        .WithMany("SessionRegistrations")
                        .HasForeignKey("StudentSchoolYearGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DaySchedule");

                    b.Navigation("StudentSchoolYear");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.StudentSchoolYear", b =>
                {
                    b.HasOne("GrantTracker.Dal.Schema.OrganizationYear", "OrganizationYear")
                        .WithMany("StudentSchoolYears")
                        .HasForeignKey("OrganizationYearGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrantTracker.Dal.Schema.Student", "Student")
                        .WithMany("StudentSchoolYears")
                        .HasForeignKey("StudentGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizationYear");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Activity", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.FundingSource", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.InstructorSchoolYear", b =>
                {
                    b.Navigation("AttendanceRecords");

                    b.Navigation("ExceptionLogs");

                    b.Navigation("Identity");

                    b.Navigation("SessionRegistrations");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.InstructorStatus", b =>
                {
                    b.Navigation("InstructorYears");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.LookupDefinition", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Objective", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Organization", b =>
                {
                    b.Navigation("Years");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.OrganizationType", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.OrganizationYear", b =>
                {
                    b.Navigation("InstructorSchoolYears");

                    b.Navigation("Sessions");

                    b.Navigation("StudentSchoolYears");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.PartnershipType", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Session", b =>
                {
                    b.Navigation("DaySchedules");

                    b.Navigation("FamilyAttendance");

                    b.Navigation("InstructorAttendance");

                    b.Navigation("InstructorRegistrations");

                    b.Navigation("SessionGrades");

                    b.Navigation("StudentAttendance");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.SessionDaySchedule", b =>
                {
                    b.Navigation("StudentRegistrations");

                    b.Navigation("TimeSchedules");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.SessionType", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.StudentSchoolYear", b =>
                {
                    b.Navigation("AttendanceRecords");

                    b.Navigation("SessionRegistrations");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Year", b =>
                {
                    b.Navigation("Organizations");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.FamilyMember", b =>
                {
                    b.Navigation("AttendanceRecords");

                    b.Navigation("Relationships");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Instructor", b =>
                {
                    b.Navigation("InstructorSchoolYears");
                });

            modelBuilder.Entity("GrantTracker.Dal.Schema.Student", b =>
                {
                    b.Navigation("Relationships");

                    b.Navigation("StudentSchoolYears");
                });
#pragma warning restore 612, 618
        }
    }
}
